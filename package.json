{
  "name": "zf",
  "displayName": "ZeitlerForce",
  "repository": "https://github.com/codythomaszeitler/sf-zsi.git",
  "description": "vscode extensions for salesforce.",
  "version": "1.39.0",
  "engines": {
    "vscode": "^1.82.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "workspaceContains:sfdx-project.json"
  ],
  "publisher": "zsi",
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "sf.zsi.openOrg",
        "title": "ZF: Open Org"
      },
      {
        "command": "sf.zsi.projectDeploy",
        "title": "ZF: Project Deploy"
      },
      {
        "command": "sf.zsi.generateFauxSObjects",
        "title": "ZF: Generate Faux SObjects"
      },
      {
        "command": "sf.zsi.runHighlightedApex",
        "title": "ZF: Run Highlighted Apex"
      },
      {
        "command": "sf.zsi.enableDebugLogForCurrentUser",
        "title": "ZF: Enable Debug Logging"
      },
      {
        "command": "sf.zsi.getRecentApexLogs",
        "title": "ZF: Get Recent Apex Logs"
      },
      {
        "command": "sf.zsi.cleanLocalApexLogs",
        "title": "ZF: Clean Local Apex Logs"
      },
      {
        "command": "sf.zsi.refreshApexLogs",
        "title": "ZF: Refresh Apex Logs"
      },
      {
        "command": "sf.zsi.generateOfflineSymbolTable",
        "title": "ZF: Generate Apex Offline Symbol Table"
      },
      {
        "command": "sf.zsi.metadataRetrieveAndShow",
        "title": "ZF: Show Metadata",
        "enablement": "view == zeitlerforce-metadata-explorer"
      },
      {
        "command": "sf.zsi.metadataRetrieveIntoDirectory",
        "title": "ZF: Retrieve Metadata",
        "enablement": "view == zeitlerforce-metadata-explorer"
      },
      {
        "command": "sf.zsi.refreshMetadataExplorer",
        "title": "ZF: Refresh Metadata Explorer"
      },
      {
        "command": "sf.zsi.showLogDebugsOnly",
        "title": "ZF: Show Debugs"
      },
      {
        "command": "sf.zsi.generateFauxSoql",
        "title": "ZF: Generate Faux SOQL"
      },
      {
        "command": "sf.zsi.runSoqlScript",
        "title": "ZF: Run SOQL Script",
        "when": "editorLangId == soql"
      }
    ],
    "views": {
      "test": [
        {
          "title": "Apex Logs",
          "id": "server-side-apex-logs",
          "name": "Apex Logs",
          "icon": "media/dep.svg"
        },
        {
          "title": "Salesforce Cli Input/Output",
          "id": "salesforce-cli-input-output",
          "name": "Salesforce Cli Input/Output",
          "icon": "media/dep.svg"
        }
      ],
      "explorer": [
        {
          "id": "zeitlerforce-metadata-explorer",
          "name": "ZeitlerForce Metadata Explorer"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "sf.zsi.refreshApexLogs",
          "group": "navigation@0",
          "when": "view == server-side-apex-logs"
        },
        {
          "command": "sf.zsi.refreshMetadataExplorer",
          "group": "navigation@0",
          "when": "view == zeitlerforce-metadata-explorer"
        }
      ],
      "editor/title/run": [
        {
          "command": "sf.zsi.runSoqlScript",
          "group": "navigation@0",
          "when": "editorLangId == soql"
        }
      ],
      "view/item/context": [
        {
          "command": "sf.zsi.metadataRetrieveAndShow",
          "when": "view == zeitlerforce-metadata-explorer && viewItem == METADATA_NAME_NODE",
          "group": "inline"
        },
        {
          "command": "sf.zsi.metadataRetrieveIntoDirectory",
          "when": "view == zeitlerforce-metadata-explorer && viewItem == METADATA_NAME_NODE",
          "group": "inline"
        },
        {
          "command": "sf.zsi.metadataRetrieveIntoDirectory",
          "when": "view == zeitlerforce-metadata-explorer && viewItem == METADATA_NAME_NODE",
          "group": "inline"
        },
        {
          "command": "sf.zsi.showLogDebugsOnly",
          "when": "view == server-side-apex-logs && viewItem == LOG_ENTRY",
          "group": "inline"
        }
      ]
    },
    "configuration": {
      "title": "sf zsi",
      "properties": {
        "sf.zsi.vscode.shouldFocusProblemsWhenDeployFails": {
          "type": "boolean",
          "default": true,
          "description": "It 'Project Deploy' should focus the problems tab when a failure occurs."
        },
        "sf.zsi.vscode.deployOnSave": {
          "type": "boolean",
          "default": true,
          "description": "Determines if 'project deploy' should run when files are saved."
        },
        "sf.zsi.vscode.proxy": {
          "type": "object",
          "description": "Proxy settings given to the shell as a JSON object"
        },
        "sf.zsi.vscode.getLogOnTestRun": {
          "type": "boolean",
          "description": "Determines if a log should be retrieved on running apex tests.",
          "default": true
        },
        "sf.zsi.numFilesToTriggerDeploymentProgress": {
          "type": "number",
          "description": "Determines the number of files that are needed to be changed in order to track deployment progress.",
          "default": 10,
          "minimum": 0
        },
        "sf.zsi.neverShowDeploymentProgress": {
          "type": "boolean",
          "description": "If set to true, deployment progress will never be shown (this will ensure that your deployment will go as fast as possible, but you will not be able to see any progress on it). If this is set to true, the value within sf.zsi.numFilesToTriggerDeploymentProgress has no effect.",
          "default": false
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "lint": "eslint src --ext ts",
    "test": "jest"
  },
  "devDependencies": {
    "@types/glob": "^7.1.4",
    "@types/glob-to-regexp": "^0.4.4",
    "@types/jest": "^29.5.11",
    "@types/node": "14.x",
    "@types/vscode": "^1.82.0",
    "@typescript-eslint/eslint-plugin": "^5.1.0",
    "@typescript-eslint/parser": "^5.1.0",
    "@vscode/test-electron": "^1.6.2",
    "eslint": "^8.1.0",
    "glob": "^7.1.7",
    "glob-to-regexp": "^0.4.1",
    "jest": "^29.7.0",
    "ts-jest": "^29.1.1",
    "typescript": "^4.4.4"
  },
  "dependencies": {
    "antlr4ts": "^0.5.0-alpha.4",
    "apex-parser": "^2.17.0",
    "fast-xml-parser": "^4.4.0",
    "json-schema-to-ts": "^3.1.0",
    "zod": "^3.23.8"
  }
}
